package main;

import java.awt.Dimension;
import java.awt.Graphics;
import java.awt.image.BufferedImage;
import java.io.IOException;
import java.io.InputStream;

import javax.imageio.ImageIO;
import javax.swing.JPanel;

import inputs.KeyboardInputs;
import inputs.MouseInputs;
import utilz.Constaints.Playerconstaints.*;
// dung de dieu khien tro choi
public class GamePanel extends JPanel {
	private MouseInputs mouseInputs;
	private KeyboardInputs keyboard;
	// khai báo khung hình/giây
	private float xDelta = 100, yDelta = 100;
	private float xDir = 1f, yDir = 1f;
	private BufferedImage img, subImg;
	private BufferedImage[][] animations;
	// tốc độ hoạt ảnh
	private int aniTick, aniIndex, aniSpeed = 15;
	private int playerAction = IDLE;
	
	// Temporary , just for effect
//	private ArrayList<MyRect> rects = new ArrayList<>();

	public GamePanel() {

		// trình nghe
		mouseInputs = new MouseInputs(this);
		importImg();
		loadAnimation();
//		addKeyListener(new KeyboardInputs(this));
		setPanelSize();
		keyboard = new KeyboardInputs(this);
		addKeyListener(keyboard);
		// nghe chuột
		addMouseListener(mouseInputs);
		addMouseMotionListener(mouseInputs);
		setFocusable(true);
	}

	private void loadAnimation() {
		animations = new BufferedImage[9][6];
		for(int j = 0; j < animations.length; j++)
		{		for(int i = 0; i < animations[j].length; i++) {
			animations[j][i] = img.getSubimage(i * 64, j * 40, 64, 40);
			}
		}
	}

	// hàm import ảnh
	private void importImg() {
		InputStream is = getClass().getResourceAsStream("/player_sprites.png");

		try {
			img = ImageIO.read(is);
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}

	public void setPanelSize() {
		Dimension size = new Dimension(1280, 800);
		setMinimumSize(size);
		setPreferredSize(size);

	}

	public void changeXDelta(int value) {
		this.xDelta += value;
		// sơn lại các thuộc tính
//		repaint();
	}

	public void changeYDelta(int value) {
		this.yDelta += value;
		// sơn lại các thuộc tính
		// sơn
//		repaint();
	}

	public void setRectPos(int x, int y) {
		this.xDelta = x;
		this.yDelta = y;
	}

//	public void spawRect(int x, int y) {
//		rects.add(new MyRect(x, y));
//	}

	private void updateAnimation() {
		aniTick++;
		if (aniTick > aniSpeed) {
			aniTick = 0;
			aniIndex++;
			if (aniIndex >= 6) {
				aniIndex = 0;
			}
		}

	}

	public void paintComponent(Graphics g) {
		super.paintComponent(g);
		updateAnimation();
//		subImg = img.getSubimage(1*64, 8*40, 60, 40);
		g.drawImage(animations[1][aniIndex], (int) xDelta, (int) yDelta, 128, 80, null);
	}

}
