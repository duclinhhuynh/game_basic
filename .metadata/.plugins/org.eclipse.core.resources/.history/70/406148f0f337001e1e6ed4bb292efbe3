package main;

import java.awt.Color;
import java.awt.Graphics;

import javax.swing.JPanel;

import inputs.KeyboardInputs;
import inputs.MouseInputs;

// dung de dieu khien tro choi
public class GamePanel extends JPanel{
	private MouseInputs mouseInputs;
	private KeyboardInputs keyboard;
	// khai báo khung hình/giây
	private int frames = 0;
	private long lastCheck = 0;
	private float xDelta = 100, yDelta = 100;
	private float xDir = 0.3f, yDir = 0.3f;
	private Color color = new Color(150, 20, 30);
	public GamePanel() {
		// trình ngheƯ
		mouseInputs = new MouseInputs(this);
//		addKeyListener(new KeyboardInputs(this));
		keyboard = new KeyboardInputs(this);
		addKeyListener(keyboard);
		//nghe chuột
		addMouseListener(mouseInputs);
		addMouseMotionListener(mouseInputs);
		setFocusable(true);
	}
	public void changeXDelta(int value) {
		this.xDelta +=value;
		// sơn lại các thuộc tính
//		repaint();
	}
	public void changeYDelta(int value) {
		this.yDelta +=value;
		// sơn lại các thuộc tính
		
		//sơn
//		repaint();
	}
	
	public void setRectPos(int x, int y) {
		 this.xDelta = x;
		 this.yDelta = y;
	}
	public void paintComponent(Graphics g) {
		super.paintComponent(g);
		
		updateRectangle();
		// giá trị truyền vào của hàm này là int
		g.setColor(color);
		g.fillRect((int) xDelta, (int) yDelta, 200, 50);
		// fps
		frames++;
		if(System.currentTimeMillis() - lastCheck >= 1000) {
			lastCheck = System.currentTimeMillis();
			System.out.println("FPS: " + frames);
		}
		
		repaint();
	}
	
	private void updateRectangle() {
		xDelta +=xDir;
		if(xDelta > 400 || xDelta < 0) {
			xDir *= -1;
		}
		
		yDelta += yDir;
		if(yDelta > 400 || yDelta < 0) {
			yDir *= -1;
		}
	}
}
