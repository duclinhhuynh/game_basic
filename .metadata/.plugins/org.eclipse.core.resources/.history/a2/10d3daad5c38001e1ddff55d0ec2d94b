package entitié;

import static utilz.Constaints.Directions.DOWN;
import static utilz.Constaints.Directions.LEFT;
import static utilz.Constaints.Directions.RIGHT;
import static utilz.Constaints.Directions.UP;
import static utilz.Constaints.Playerconstaints.GetSpriteAmount;
import static utilz.Constaints.Playerconstaints.IDLE;
import static utilz.Constaints.Playerconstaints.RUNNING;

import java.awt.image.BufferedImage;
import java.io.IOException;
import java.io.InputStream;

import javax.imageio.ImageIO;

public class Player extends Entity {

	private BufferedImage[][] animations;
	// tốc độ hoạt ảnh
	private int aniTick, aniIndex, aniSpeed = 15;
	private int playerAction = IDLE;
	private int playerDir = -1;
	private boolean moving = false;

	public Player(float x, float y) {
		super(x, y);
	}

	public void update() {
		updateAnimation();
		setAnimation();
		updatePos();
	}

	public void render() {
		g.drawImage(animations[playerAction][aniIndex], (int) xDelta, (int) yDelta, 128, 80, null);
	}

	private void loadAnimation() {
		InputStream is = getClass().getResourceAsStream("/player_sprites.png");

		try {
			BufferedImage img = ImageIO.read(is);
			animations = new BufferedImage[9][6];
			for (int j = 0; j < animations.length; j++) {
				for (int i = 0; i < animations[j].length; i++) {
					animations[j][i] = img.getSubimage(i * 64, j * 40, 64, 40);
				}
			}
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}

	public void setDirection(int direction) {
		this.playerDir = direction;
		moving = true;
	}

	public void setMoving(boolean moving) {
		this.moving = moving;
	}

	public void setRectPos(int x, int y) {
		this.x = x;
		this.y = y;
	}

//	public void spawRect(int x, int y) {
//		rects.add(new MyRect(x, y));
//	}

	private void updateAnimation() {
		aniTick++;
		if (aniTick > aniSpeed) {
			aniTick = 0;
			aniIndex++;
			if (aniIndex >= GetSpriteAmount(playerAction)) {
				aniIndex = 0;
			}
		}

	}

	private void setAnimation() {
		if (moving) {
			playerAction = RUNNING;
		} else {
			playerAction = IDLE;
		}

	}

	private void updatePos() {
		if (moving) {
			switch (playerDir) {
			case LEFT:
				x -= 5;
				break;
			case RIGHT:
				x += 5;
				break;
			case UP:
				y -= 5;
				break;
			case DOWN:
				y += 5;
				break;
			}
		}

	}

}
